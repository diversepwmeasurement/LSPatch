jobs:
  build:
    env:
      CCACHE_BASEDIR: ${{ github.workspace }}
      CCACHE_COMPILERCHECK: '%compiler% -dumpmachine; %compiler% -dumpversion'
      CCACHE_HARDLINK: 'true'
      CCACHE_NOHASHDIR: 'true'
    name: Build on ${{ matrix.os }}
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        submodules: recursive
    - continue-on-error: true
      if: github.event_name != 'pull_request' && github.ref == 'refs/heads/master'
      name: Write key
      run: "if [ ! -z \"${{ secrets.KEY_STORE }}\" ]; then\n  echo androidStorePassword='${{\
        \ secrets.KEY_STORE_PASSWORD }}' >> gradle.properties\n  echo androidKeyAlias='${{\
        \ secrets.ALIAS }}' >> gradle.properties\n  echo androidKeyPassword='${{ secrets.KEY_PASSWORD\
        \ }}' >> gradle.properties\n  echo androidStoreFile='key.jks' >> gradle.properties\n\
        \  echo ${{ secrets.KEY_STORE }} | base64 --decode > key.jks\nfi\n"
    - continue-on-error: true
      name: Checkout libxposed/api
      uses: actions/checkout@v3
      with:
        path: libxposed/api
        repository: libxposed/api
    - continue-on-error: true
      name: Checkout libxposed/service
      uses: actions/checkout@v3
      with:
        path: libxposed/service
        repository: libxposed/service
    - continue-on-error: true
      name: Setup Java
      uses: actions/setup-java@v3
      with:
        distribution: temurin
        java-version: '17'
    - continue-on-error: true
      name: Setup Gradle
      uses: gradle/gradle-build-action@v2
      with:
        gradle-home-cache-cleanup: true
    - continue-on-error: true
      name: Set up ccache
      uses: hendrikmuhs/ccache-action@v1.2
      with:
        key: ${{ runner.os }}
        max-size: 2G
        restore-keys: ${{ runner.os }}
        save: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master'
          }}
    - continue-on-error: true
      name: Build dependencies
      run: 'cd api

        echo ''org.gradle.jvmargs=-Xmx2048m'' >> gradle.properties

        ./gradlew :api:publishApiPublicationToMavenLocal

        cd ..

        cd service

        echo ''org.gradle.jvmargs=-Xmx2048m'' >> gradle.properties

        ./gradlew :interface:publishInterfacePublicationToMavenLocal

        '
      working-directory: libxposed
    - continue-on-error: true
      name: Build with Gradle
      run: 'echo ''org.gradle.parallel=true'' >> gradle.properties

        echo ''org.gradle.jvmargs=-Xmx2048m'' >> gradle.properties

        echo ''android.native.buildOutput=verbose'' >> gradle.properties

        ./gradlew buildAll

        '
    - continue-on-error: true
      name: Upload Debug artifact
      uses: actions/upload-artifact@v3
      with:
        name: lspatch-debug
        path: out/debug/*
    - continue-on-error: true
      name: Upload Release artifact
      uses: actions/upload-artifact@v3
      with:
        name: lspatch-release
        path: out/release/*
    - continue-on-error: true
      name: Upload mappings
      uses: actions/upload-artifact@v3
      with:
        name: mappings
        path: 'patch-loader/build/outputs/mapping

          manager/build/outputs/mapping

          '
    - continue-on-error: true
      name: Upload symbols
      uses: actions/upload-artifact@v3
      with:
        name: symbols
        path: 'patch-loader/build/symbols

          '
    - continue-on-error: true
      env:
        BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
        CHANNEL_ID: ${{ secrets.CHANNEL_ID }}
        COMMIT_MESSAGE: ${{ github.event.head_commit.message }}
        COMMIT_URL: ${{ github.event.head_commit.url }}
        DISCUSSION_ID: ${{ secrets.DISCUSSION_ID }}
        TOPIC_ID: ${{ secrets.TOPIC_ID }}
      if: ${{ github.event_name != 'pull_request' && success() && github.ref == 'refs/heads/master'
        }}
      name: Post to channel
      run: "if [ ! -z \"${{ secrets.BOT_TOKEN }}\" ]; then\n  export jarRelease=$(find\
        \ out/release -name \"*.jar\")\n  export managerRelease=$(find out/release\
        \ -name \"*.apk\")\n  export jarDebug=$(find out/debug -name \"*.jar\")\n\
        \  export managerDebug=$(find out/debug -name \"*.apk\")\n  ESCAPED=`python3\
        \ -c 'import json,os,urllib.parse; msg = json.dumps(os.environ[\"COMMIT_MESSAGE\"\
        ]); print(urllib.parse.quote(msg if len(msg) <= 1024 else json.dumps(os.environ[\"\
        COMMIT_URL\"])))'`\n  curl -v \"https://api.telegram.org/bot${BOT_TOKEN}/sendMediaGroup?chat_id=${CHANNEL_ID}&media=%5B%7B%22type%22%3A%22document%22%2C%20%22media%22%3A%22attach%3A%2F%2FjarRelease%22%7D%2C%7B%22type%22%3A%22document%22%2C%20%22media%22%3A%22attach%3A%2F%2FmanagerRelease%22%7D%2C%7B%22type%22%3A%22document%22%2C%20%22media%22%3A%22attach%3A%2F%2FjarDebug%22%7D%2C%7B%22type%22%3A%22document%22%2C%20%22media%22%3A%22attach%3A%2F%2FmanagerDebug%22%2C%22caption%22:${ESCAPED}%7D%5D\"\
        \ -F jarRelease=\"@$jarRelease\" -F managerRelease=\"@$managerRelease\" -F\
        \ jarDebug=\"@$jarDebug\" -F managerDebug=\"@$managerDebug\"\n  # curl -v\
        \ \"https://api.telegram.org/bot${BOT_TOKEN}/sendMediaGroup?chat_id=${DISCUSSION_ID}&message_thread_id=${TOPIC_ID}&media=%5B%7B%22type%22%3A%22document%22%2C%20%22media%22%3A%22attach%3A%2F%2FjarRelease%22%7D%2C%7B%22type%22%3A%22document%22%2C%20%22media%22%3A%22attach%3A%2F%2FmanagerRelease%22%7D%2C%7B%22type%22%3A%22document%22%2C%20%22media%22%3A%22attach%3A%2F%2FjarDebug%22%7D%2C%7B%22type%22%3A%22document%22%2C%20%22media%22%3A%22attach%3A%2F%2FmanagerDebug%22%2C%22caption%22:${ESCAPED}%7D%5D\"\
        \ -F jarRelease=\"@$jarRelease\" -F managerRelease=\"@$managerRelease\" -F\
        \ jarDebug=\"@$jarDebug\" -F managerDebug=\"@$managerDebug\"\nfi\n"
    strategy:
      matrix:
        os:
        - ubuntu-latest
name: Android CI
on:
  repository_dispatch:
    types: trigger-ga___main.yml
